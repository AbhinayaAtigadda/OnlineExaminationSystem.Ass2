#include<iostream>
#include<string>
#include<stack>
#include<queue>
using namespace std;
class Question {
public:
    string questionText;
    string options[4];
    int correctOption;
    Question() {}
    Question(string q, string opts[], int correct) {
        questionText = q;
        for (int i = 0; i < 4; i++) {
            options[i] = opts[i];
        }
        correctOption = correct;
    }
    void display() {
        cout << questionText << endl;
        for (int i = 0; i < 4; i++) {
            cout << i + 1 << ". " << options[i] << endl;
        }
    }
};
class User {
public:
    string username;
    string password;
    User* next;

    User(string u, string p) : username(u), password(p), next(nullptr) {}
};
class UserList {
    User* head;
public:
    UserList() : head(nullptr) {}
    void registerUser(string username, string password) {
        User* newUser = new User(username, password);
        newUser->next = head;
        head = newUser;
    }
    bool loginUser(string username, string password) {
        User* temp = head;
        while (temp) {
            if (temp->username == username && temp->password == password) {
                return true;
            }
            temp = temp->next;
        }
        return false;
    }
    void displayUsers() {
        cout << "Registered Users:\n";
        User* temp = head;
        while (temp) {
            cout << "- " << temp->username << endl;
            temp = temp->next;
        }
    }
};
class ExamSystem {
    UserList users;
    stack<string> examHistory;
    queue<string> examQueue;
    Question questions[100];
    int totalQuestions;
public:
    ExamSystem() : totalQuestions(0) {}

    void menu() {
        int choice;
        string username, password;

        inputQuestions(); // Admin inputs questions at start
        while (true) {
            cout << "\n--- Online Examination System ---\n";
            cout << "1. Register\n2. Login\n3. View Users\n4. Exit\nEnter choice: ";
            cin >> choice;

            if (choice == 1) {
                cout << "Enter username: ";
                cin >> username;
                cout << "Enter password: ";
                cin >> password;
                users.registerUser(username, password);
                cout << "Registration successful!\n";
            }
            else if (choice == 2) {
                cout << "Enter username: ";
                cin >> username;
                cout << "Enter password: ";
                cin >> password;

                if (users.loginUser(username, password)) {
                    cout << "Login successful! Adding to exam queue...\n";
                    examQueue.push(username);
                    startExam();
                }
                else {
                    cout << "Login failed. Invalid credentials.\n";
                }
            }
            else if (choice == 3) {
                users.displayUsers();
            }
            else if (choice == 4) {
                break;
            }
            else {
                cout << "Invalid choice.\n";
            }
        }
        displayHistory(); // At end, show exam history
    }
    void inputQuestions() {
        cout << "Enter number of questions you want to add: ";
        cin >> totalQuestions;
        cin.ignore();

        for (int i = 0; i < totalQuestions; i++) {
            string qText, opts[4];
            int correct;

            cout << "\nEnter question " << i + 1 << " text: ";
            getline(cin, qText);

            for (int j = 0; j < 4; j++) {
                cout << "Enter option " << j + 1 << ": ";
                getline(cin, opts[j]);
            }
            cout << "Enter correct option number (1-4): ";
            cin >> correct;
            cin.ignore();

            questions[i] = Question(qText, opts, correct);
        }
    }
    void startExam() {
        if (examQueue.empty()) return;

        string currentUser = examQueue.front();
        examQueue.pop();
        cout << "\nStarting exam for " << currentUser << "...\n";

        int answers[100] = {0};
        stack<int> history;
        int current = 0;
        while (true) {
            cout << "\nQuestion " << current + 1 << ":\n";
            questions[current].display();

            cout << "Your previous answer: ";
            if (answers[current] != 0)
                cout << answers[current] << endl;
            else
                cout << "None\n";
            cout << "\nOptions:\n1. Answer\n2. Previous Question\n3. Next Question\n4. Submit Exam\nEnter choice: ";
            int action;
            cin >> action;

            if (action == 1) {
                cout << "Enter your answer (1-4): ";
                cin >> answers[current];
            }
            else if (action == 2) {
                if (!history.empty()) {
                    current = history.top();
                    history.pop();
                }
                else {
                    cout << "Already at the first question!\n";
                }
            }
            else if (action == 3) {
                if (current < totalQuestions - 1) {
                    history.push(current);
                    current++;
                }
                else {
                    cout << "Already at the last question!\n";
                }
            }
            else if (action == 4) {
                break;
            }
            else {
                cout << "Invalid input!\n";
            }
        }
        int score = 0;
        for (int i = 0; i < totalQuestions; i++) {
            if (answers[i] == questions[i].correctOption) {
                score++;
            }
        }
        cout << "\nExam Finished! " << currentUser << "'s Score: " << score << "/" << totalQuestions << endl;
        examHistory.push(currentUser + " scored " + to_string(score) + "/" + to_string(totalQuestions));
    }
    void displayHistory() {
        cout << "\n--- Exam History ---\n";
        while (!examHistory.empty()) {
            cout << examHistory.top() << endl;
            examHistory.pop();
        }
        cout << "Thank you for using the system!\n";
    }
};
int main() {
    ExamSystem system;
    system.menu();
    return 0;
}
